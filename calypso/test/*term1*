[zhang-MacB]~/work/COOL/calypso/calypso/test $ ls
__init__.py cond.py     cond.py~
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from con
cond        contextlib  

In [1]: from con
cond        contextlib  

In [1]: from cond import *

In [2]: c=ConditionItem()

In [3]: c.
c.CONDITION_ITEM_TYPE_ATOM  c.type
c.CONDITION_ITEM_TYPE_CONJ  c.value
c.field                     

In [3]: c.type
Out[3]: 1

In [4]: c.field

In [5]: c.CO
c.CONDITION_ITEM_TYPE_ATOM  c.CONDITION_ITEM_TYPE_CONJ

In [5]: c.CONDITION_ITEM_TYPE_
------------------------------------------------------------------------
---                                                                    
AttributeError                            Traceback (most recent call la
st)                                                                    

In [2]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=Co
ConditionItem     ConditionItemAnd  

In [2]: c=ConditionItemAnd()
-----------------------------------------------------------------------
----                                                                  
NameError                                 Traceback (most recent call l
ast)                                                                  
<ipython-input-2-6297ab5c81f3> in <module>()
----> 1 c=ConditionItemAnd()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, c
ond_item_l, cond_item_r)                                              
     19 class ConditionItemAnd(ConditionItem):
     20     def __init__(self, cond_item_l=None, cond_item_r=None):
---> 21         super(ConditionItemAnd, self).__init__(type=CONDITION_I
TEM_TYPE_CONJ)                                                        
     22         self.cond_item_l = cond_item_l
     23         self.cond_item_r = cond_item_r

NameError: global name 'CONDITION_ITEM_TYPE_CONJ' is not defined

In [3]: c=ConditionItemAnd()
-----------------------------------------------------------------------
----                                                                  
NameError                                 Traceback (most recent call l
ast)                                                                  
<ipython-input-3-6297ab5c81f3> in <module>()
----> 1 c=ConditionItemAnd()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, c
ond_item_l, cond_item_r)                                              
     19 class ConditionItemAnd(ConditionItem):
     20     def __init__(self, cond_item_l=None, cond_item_r=None):
---> 21         super(ConditionItemAnd, self).__init__(type=ConditionIt
em.CONDITION_ITEM_TYPE_CONJ)                                          
     22         self.cond_item_l = cond_item_l
     23         self.cond_item_r = cond_item_r

NameError: global name 'CONDITION_ITEM_TYPE_CONJ' is not defined

In [4]: 
Do you really want to exit ([y]/n)? 
i[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
frPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemAnd()

In [3]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemAnd()

In [3]: c.
c.cond_item_l  c.field        c.type         
c.cond_item_r  c.sql          c.value        

In [3]: c.field

In [4]: c.value 

In [5]: c.sql()

In [6]: c.con
c.cond_item_l  c.cond_item_r  

In [6]: c.cond_item_
c.cond_item_l  c.cond_item_r  

In [6]: c.cond_item_l

In [7]: c.cond_item_r

In [8]: c.type
Out[8]: 0

In [9]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
fPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemBase()

In [3]: c.sql()
----------------------------------------------------------------------
-----                                                                
NotImplementedError                       Traceback (most recent call 
last)                                                                
<ipython-input-3-fae1bf82cfe3> in <module>()
----> 1 c.sql()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in sql(self)
     14 
     15     def sql(self):
---> 16         raise NotImplementedError()
     17 
     18 

NotImplementedError: 

In [4]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemBase()

In [3]: c.sql()
----------------------------------------------------------------------
-----                                                                
NotImplementedError                       Traceback (most recent call 
last)                                                                
<ipython-input-3-fae1bf82cfe3> in <module>()
----> 1 c.sql()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in sql(self)
     14 
     15     def sql(self):
---> 16         raise NotImplementedError('%s.sql() not implememted' s
elf.__class__)                                                       
     17 
     18 

NotImplementedError: <class 'cond.ConditionItemBase'>.sql() not implem
emted                                                                

In [4]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
wo^PPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 2.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: 
Do you really want to exit ([y]/n)? 
[zhang-MacB]~/work/COOL/calypso/calypso/test $ workon COOL
i(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
fPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemBase()

In [3]: c.sql()                                                 
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(18)sql()
     17 
---> 18         raise NotImplementedError('%s.sql() not implememted' s
elf.__class__)                                                       
     19 

ipdb> self.__class__
<class 'cond.ConditionItemBase'>
ipdb> self.__class__
self.__class__
ipdb> self.__
self.__class__         self.__hash__          self.__repr__
self.__delattr__       self.__init__          self.__setattr__
self.__dict__          self.__module__        self.__sizeof__
self.__doc__           self.__new__           self.__str__
self.__format__        self.__reduce__        self.__subclasshook__
self.__getattribute__  self.__reduce_ex__     self.__weakref__
ipdb> self.__name__
*** AttributeError: 'ConditionItemBase' object has no attribute '__nam
e__'                                                                 
ipdb> self.__class__
<class 'cond.ConditionItemBase'>
ipdb> str(self.__class__)[7:-1]                                       
"'cond.ConditionItemBase'"
ipdb> str(self.__class__)[8:-2]                                       
'cond.ConditionItemBase'
ipdb> 
----------------------------------------------------------------------
-----                                                                
BdbQuit                                   Traceback (most recent call 
last)                                                                
<ipython-input-3-fae1bf82cfe3> in <module>()
----> 1 c.sql()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in sql(self)
     16     def _class(self):
     17         return str(self.__class__)[8:-2]
---> 18 
     19     def sql(self):
     20         raise NotImplementedError('%s.sql() not implememted' s
elf._class)                                                          

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in sql(self)
     16     def _class(self):

In [1]: from cond import *

In [2]: c=^L^A^K^L
  File "<ipython-input-2-1d21e74c0b5b>", line 1
    c=
      ^
SyntaxError: invalid syntax


In [3]: 

In [3]: 

In [3]: 

In [3]: 

In [3]: ^Lc^A^K^A^K
  File "<ipython-input-3-29f0250feacd>", line 2
    c
     ^
SyntaxError: invalid syntax


In [4]: 

In [4]: 

In [4]: 

In [4]: 

In [4]: 

In [4]: 

In [4]: ^L^L^A^Kk
  File "<ipython-input-4-cd26e1545ea6>", line 3
    
    ^
SyntaxError: invalid syntax


In [5]: 

In [5]: 

In [5]: 

In [5]: 

In [5]: ^L^L^L^L^A^K
  File "<ipython-input-5-0d23a7d7502e>", line 5
    
    ^
SyntaxError: invalid syntax


In [6]: 

In [6]: 

In [6]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=ConditionItemBase()

In [3]: c.sql()
----------------------------------------------------------------------
-----                                                                
NotImplementedError                       Traceback (most recent call 
last)                                                                
<ipython-input-3-fae1bf82cfe3> in <module>()
----> 1 c.sql()

/Users/zhang/work/COOL/calypso/calypso/test/cond.pyc in sql(self)
     18 
     19     def sql(self):
---> 20         raise NotImplementedError('%s.sql() not implememted' s
elf._class)                                                          
     21 
     22 

NotImplementedError: cond.ConditionItemBase.sql() not implememted

In [4]: c=And()                                                       

In [5]: c.sql()
----------------------------------------------------------------------
-----                                                                
AttributeError                            Traceback (most recent call 
last)                                                                
<ipython-input-5-fae1bf82cfe3> in <module>()
----> 1 c.sql()

/Users/zhang/work/COOL/calypso/calypso/test/cond.pyc in sql(self)
     28 
     29     def sql(self):
---> 30         return "( %s AND %s )" % (self.cond_item_l.sql(), selc
ond_item_r.sql())                                                    
     31 
     32 

AttributeError: 'NoneType' object has no attribute 'sql'

In [6]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
fPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c_a=Operator('!=', 'a', '10')                                 

In [3]: c_a.sql()
Out[3]: '( a != 10 )'

In [4]: c_not_a=Not(Operator('!=', 'a', '10'))                        

In [5]: c_not_a.sql()
Out[5]: '( NOT ( a != 10 ) )'

In [6]: And(c_a, c_not_a)                                             
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.

In [6]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ls
__init__.py cond.py     cond.pyc    cond.py~
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
frPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: c=And()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)

In [8]: ls
__init__.py  cond.py      cond.pyc     cond.py~

In [9]: 

In [9]: 

In [9]: 

In [9]: ls
__init__.py  cond.py      cond.pyc     cond.py~

In [10]: f=Field()
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-10-b3a182923a80> in <module>()
----> 1 f=Field()

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, name, type, default, comment)
     71 
     72     def __init__(self, name=None, type=None, default=None, comment=None):
---> 73         self.name = anme
     74         self.type = type
     75         self.default = default

NameError: global name 'anme' is not defined

In [11]: f=Field(name='id')                                                                                   
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-11-f3d4f4a661ad> in <module>()
----> 1 f=Field(name='id')

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, name, type, default, comment)
     71 
     72     def __init__(self, name=None, type=None, default=None, comment=None):
---> 73         self.name = name
     74         self.type = type
     75         self.default = default

NameError: global name 'anme' is not defined

In [12]: 
Do you really want to exit ([y]/n)? 
i(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id')

In [3]: f.name
Out[3]: 'id'

In [4]: f != 2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-4-80bb6bbb1148> in <module>()
----> 1 f != 2

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __ne__(self, other)
     85     def __eq__(self, other): return self._f_built_in('==', other)
     86 
---> 87     def __ne__(self, other): return self._f_built_in('!=', other)
     88 
     89     def __ge__(self, other): return self._f_built_in('>=', other)

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in _f_built_in(self, operator_str, f_r)
     78     def _f_built_in(self, operator_str, f_r):
     79         # check type(f_r)
---> 80         if not isinstance(f_r, self.type):
     81             print "Error: right value is not type('%s')" % self.type
     82             return

TypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types

In [5]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
fPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id')

In [3]: f != 2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-3-80bb6bbb1148> in <module>()
----> 1 f != 2

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __ne__(self, other)
     85     def __eq__(self, other): return self._f_built_in('==', other)
     86 
---> 87     def __ne__(self, other): return self._f_built_in('!=', other)
     88 
     89     def __ge__(self, other): return self._f_built_in('>=', other)

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in _f_built_in(self, operator_str, f_r)
     78     def _f_built_in(self, operator_str, f_r):
     79         # check type(f_r)
---> 80         if not isinstance(f_r, (self.type, Field)):
     81             print "Error: right value is not type('%s')" % self.type
     82             return

TypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types

In [4]: 

In [3]: from cond import *

In [4]: f=Field(name='id')

In [5]: f != 2                                                                                               
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-5-80bb6bbb1148> in <module>()
----> 1 f != 2

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __ne__(self, other)
     85     def __eq__(self, other): return self._f_built_in('==', other)
     86 
---> 87     def __ne__(self, other): return self._f_built_in('!=', other)
     88 
     89     def __ge__(self, other): return self._f_built_in('>=', other)

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in _f_built_in(self, operator_str, f_r)
     78     def _f_built_in(self, operator_str, f_r):
     79         # check type(f_r)
---> 80         if not isinstance(f_r, [self.type, Field]):
     81             print "Error: right value is not type('%s')" % self.type
     82             return

TypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types

In [6]: f.type

In [7]: [f.type, Field]
Out[7]: [None, cond.Field]

In [8]: f=Field(name='id', type=int)

In [9]: 

In [9]: 

In [9]: f != 2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-9-80bb6bbb1148> in <module>()
----> 1 f != 2

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __ne__(self, other)
     85     def __eq__(self, other): return self._f_built_in('==', other)
     86 
---> 87     def __ne__(self, other): return self._f_built_in('!=', other)
     88 
     89     def __ge__(self, other): return self._f_built_in('>=', other)

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in _f_built_in(self, operator_str, f_r)
     78     def _f_built_in(self, operator_str, f_r):
     79         # check type(f_r)
---> 80         if not isinstance(f_r, [self.type, Field]):
     81             print "Error: right value is not type('%s')" % self.type
     82             return

TypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types

In [10]: 
Do you really want to exit ([y]/n)? 
i(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ Use "exit" to leave the shell.
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: f != 2
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, [self.type, self.__class__]):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> a
self = <cond.Field object at 0x1101781d0>
operator_str = !=
other = 2
ipdb> isinstance(2, int)
True
ipdb> isinstance(2, self.__class__)
False
ipdb> isinstance(2, (int, self.__class__))                                                                    
True
ipdb> n
TypeError: 'isinstance() arg 2 must be a class, type, or tuple of classes and types'
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, [self.type, self.__class__]):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> f.type
*** NameError: name 'f' is not defined
ipdb> self.type
<type 'int'>
ipdb> self.__class__
<class 'cond.Field'>
ipdb> other
2
ipdb> 

---------------------------------------------------------------------------
BdbQuit                                   Traceback (most recent call last)
<ipython-input-3-80bb6bbb1148> in <module>()
----> 1 f != 2

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __ne__(self, other)
     86     def __eq__(self, other): return self._f_built_in('==', other)
     87 
---> 88     def __ne__(self, other): return self._f_built_in('!=', other)
     89 
     90     def __ge__(self, other): return self._f_built_in('>=', other)

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in _f_built_in(self, operator_str, other)
     79         import ipdb; ipdb.set_trace()
     80 
---> 81         if not isinstance(other, int):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')
     83             return

/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.pyc in trace_dispatch(self, frame, 
event, arg)                                                                                                  
     53             return self.dispatch_return(frame, arg)
     54         if event == 'exception':
---> 55             return self.dispatch_exception(frame, arg)
     56         if event == 'c_call':
     57             return self.trace_dispatch

/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.pyc in dispatch_exception(self, fra
me, arg)                                                                                                     
     95         if self.stop_here(frame):
     96             self.user_exception(frame, arg)
---> 97             if self.quitting: raise BdbQuit
     98         return self.trace_dispatch
     99 

BdbQuit: 

In [4]: 

In [4]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: f != 2
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, int):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> c
Out[3]: <cond.Operator at 0x10ab67150>

In [4]: 
Do you really want to exit ([y]/n)? 
i(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
frPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: f != 2
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, self.type):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> c
Out[3]: <cond.Operator at 0x10f7d6150>

In [4]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f == 1 | f == 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-2-f11df40e5705> in <module>()
----> 1 f == 1 | f == 2

NameError: name 'f' is not defined

In [3]: f != 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-3-80bb6bbb1148> in <module>()
----> 1 f != 2

NameError: name 'f' is not defined

In [4]: f=Field(name='id', type=int)

In [5]: f != 2
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, (self.type, Field)):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> c
Out[5]: <cond.Operator at 0x1069b1150>

In [6]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ls
__init__.py cond.py     cond.pyc    cond.py~
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ cl
removing ./cond.pyc
removing ./cond.py~
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ls
__init__.py cond.py
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: f != 2
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(81)_f_built_in()
     80 
---> 81         if not isinstance(other, (self.type, Field)):
     82             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> c
Out[3]: <cond.Operator at 0x108ba3150>

In [4]: f != 2 & f == 2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-4-40b8e7c31e44> in <module>()
----> 1 f != 2 & f == 2

TypeError: unsupported operand type(s) for &: 'int' and 'Field'

In [5]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: a=f != 2                                                                                              
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(83)_f_built_in()
     82 
---> 83         if not isinstance(other, (self.type, Field)):
     84             print "Error: right value is not type:'%s' or %s" % (self.type, 'Field')

ipdb> c

In [4]: a & a
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(25)__and__()
     24 
---> 25         return And(self, other)
     26 

ipdb> s
--Call--
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(42)__init__()
     41 class And(ConditionItemBase):
---> 42     def __init__(self, cond_item_l, cond_item_r):
     43         super(And, self).__init__(type=CONDITION_ITEM_TYPE_CONJ)

ipdb> n
> /Users/zhang/work/COOL/calypso/calypso/test/cond.py(43)__init__()
     42     def __init__(self, cond_item_l, cond_item_r):
---> 43         super(And, self).__init__(type=CONDITION_ITEM_TYPE_CONJ)
     44         self.cond_item_l = cond_item_l

ipdb> a
self = <cond.And object at 0x10a2d8ed0>
cond_item_l = <cond.Operator object at 0x10a2d8150>
cond_item_r = <cond.Operator object at 0x10a2d8150>
ipdb> cond_item_l.sql()
*** AttributeError: 'str' object has no attribute 'name'
ipdb> cond_item_l
<cond.Operator object at 0x10a2d8150>
ipdb> cond_item_l.
cond_item_l.field     cond_item_l.sql       cond_item_l.value     
cond_item_l.operator  cond_item_l.type      
ipdb> cond_item_l.
cond_item_l.field     cond_item_l.sql       cond_item_l.value     
cond_item_l.operator  cond_item_l.type      
ipdb> cond_item_l.
cond_item_l.field     cond_item_l.sql       cond_item_l.value     
cond_item_l.operator  cond_item_l.type      
ipdb> cond_item_l.field
'!='
ipdb> cond_item_l.value
2
ipdb> 

---------------------------------------------------------------------------
BdbQuit                                   Traceback (most recent call last)
<ipython-input-4-d1c44b5517e2> in <module>()
----> 1 a & a

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __and__(self, other)
     23         import ipdb; ipdb.set_trace()
     24 
---> 25         return And(self, other)
     26 
     27     def __or__(self, other):

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, cond_item_l, cond_item_r)
     41 class And(ConditionItemBase):
     42     def __init__(self, cond_item_l, cond_item_r):
---> 43         super(And, self).__init__(type=CONDITION_ITEM_TYPE_CONJ)
     44         self.cond_item_l = cond_item_l
     45         self.cond_item_r = cond_item_r

/Users/zhang/work/COOL/calypso/calypso/test/cond.py in __init__(self, cond_item_l, cond_item_r)
     41 class And(ConditionItemBase):
     42     def __init__(self, cond_item_l, cond_item_r):
---> 43         super(And, self).__init__(type=CONDITION_ITEM_TYPE_CONJ)
     44         self.cond_item_l = cond_item_l
     45         self.cond_item_r = cond_item_r

/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.pyc in trace_dispatch(self, frame, 
event, arg)                                                                                                  
     47             return # None
     48         if event == 'line':
---> 49             return self.dispatch_line(frame)
     50         if event == 'call':
     51             return self.dispatch_call(frame, arg)

/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.pyc in dispatch_line(self, frame)
     66         if self.stop_here(frame) or self.break_here(frame):
     67             self.user_line(frame)
---> 68             if self.quitting: raise BdbQuit
     69         return self.trace_dispatch
     70 

BdbQuit: 

In [5]: 

In [5]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: f=Field(name='id', type=int)

In [3]: a=f != 2

In [4]: a & a
Out[4]: <cond.And at 0x10b56e0d0>

In [5]: (a & a).sql()                                                                                        
Out[5]: '( ( id != 2 ) AND ( id != 2 ) )'

In [6]: (f != 2 ) & (f == 3)                                                                               
Out[6]: <cond.And at 0x10b5853d0>

In [7]: (f != 2 ) & (f == 3).sql()
Out[7]: <cond.And at 0x10b5854d0>

In [8]: ((f != 2 ) & (f == 3)).sql()                                                                         
Out[8]: '( ( id != 2 ) AND ( id == 3 ) )'

In [9]: 
Do you really want to exit ([y]/n)? 
(COOL)[zhang-MacB]~/work/COOL/calypso/calypso/test $ ipy
fPython 2.7.5 (default, Mar  9 2014, 22:15:05) 
Type "copyright", "credits" or "license" for more information.

IPython 3.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: from cond import *

In [2]: a=f != 2
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-2-831257b4e014> in <module>()
----> 1 a=f != 2

NameError: name 'f' is not defined

In [3]: f=Field(name='id', type=int)

In [4]: ((f != 2 ) & (f == 3)).sql()
Out[4]: '(  id != 2  AND  id == 3  )'

In [5]: ((f != 2 ) & (f == 3) | (f == 3))
Out[5]: <cond.Or at 0x10b29c050>

In [6]: ((f != 2 ) & (f == 3) | (f == 3)).sql()
Out[6]: '( (  id != 2  AND  id == 3  ) OR  id == 3  )'

In [7]: f != 2 & f == 3 | f == 3
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-7-5ced814946d9> in <module>()
----> 1 f != 2 & f == 3 | f == 3

TypeError: unsupported operand type(s) for &: 'int' and 'Field'

In [8]: f != 2 & f == 3 | f == 3
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-8-5ced814946d9> in <module>()
----> 1 f != 2 & f == 3 | f == 3

TypeError: unsupported operand type(s) for &: 'int' and 'Field'

In [9]: f != 2 | f == 3
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-9-57f9945dc674> in <module>()
----> 1 f != 2 | f == 3

TypeError: unsupported operand type(s) for |: 'int' and 'Field'

In [10]: a=f != 2

In [11]: a | a
Out[11]: <cond.Or at 0x10b22fcd0>

In [12]: (a | a).sql()                                                                                       
Out[12]: '(  id != 2  OR  id != 2  )'

In [13]: f !=2 & f==3
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-13-e264b1f76a93> in <module>()
----> 1 f !=2 & f==3

TypeError: unsupported operand type(s) for &: 'int' and 'Field'

In [14]: (f !=2) & (f==3)                                                                                    
Out[14]: <cond.And at 0x10b29c250>

In [15]: (f !=2) & (f==3) | (f==3)
Out[15]: <cond.Or at 0x10b29c850>

In [16]: cond-(f !=2) & (f==3) | (f==3)                                                                      
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-16-8ed4bceca25f> in <module>()
----> 1 cond-(f !=2) & (f==3) | (f==3)

NameError: name 'cond' is not defined

In [17]: cond=(f !=2) & (f==3) | (f==3)                                                                      

In [18]: cond.sql()
Out[18]: '( (  id != 2  AND  id == 3  ) OR  id == 3  )'

In [19]: 