["class OrdersModel(ModelIface):\n    TABLE_NAME = 'orders'\n    # DB_NAME = 'go'\n    def __init__(self, id=None, serial=None, person_id=None, create_time=None):\n        super(OrdersModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.serial = Field(name='serial', type=str, value=serial, default=None)\n        self.person_id = Field(name='person_id', type=int, value=person_id, default=None)\n        self.create_time = Field(name='create_time', type=str, value=create_time, default='None')", "class LeoPropertyModel(ModelIface):\n    TABLE_NAME = 'leo_property'\n    # DB_NAME = 'warehouse'\n    def __init__(self, leo_id=None, property_id=None, property_value=None):\n        super(LeoPropertyModel, self).__init__()\n        self.leo_id = Field(name='leo_id', type=int, value=leo_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_value = Field(name='property_value', type=str, value=property_value, default=None)", "class CategoryModel(ModelIface):\n    TABLE_NAME = 'category'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, father_id=None, height=None, name=None, cn_name=None, icon_view=None, icon_pressed=None, description=None):\n        super(CategoryModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.father_id = Field(name='father_id', type=int, value=father_id, default=None)\n        self.height = Field(name='height', type=str, value=height, default='None')\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)\n        self.icon_view = Field(name='icon_view', type=str, value=icon_view, default=None)\n        self.icon_pressed = Field(name='icon_pressed', type=str, value=icon_pressed, default=None)\n        self.description = Field(name='description', type=str, value=description, default=None)", "class CategoryPropertyAssociationModel(ModelIface):\n    TABLE_NAME = 'category_property_association'\n    # DB_NAME = 'warehouse'\n    PROPERTY_TYPE_NORMAL = 'normal'\n    PROPERTY_TYPE_CRITICAL = 'critical'\n    PROPERTY_TYPE_GOODS = 'goods'\n    PROPERTY_TYPE_SALE = 'sale'\n    PROPERTY_TYPE_LEO = 'leo'\n    ALL_PROPERTY_TYPE_CANDIDATES = (\n\tPROPERTY_TYPE_NORMAL\n\t, PROPERTY_TYPE_CRITICAL\n\t, PROPERTY_TYPE_GOODS\n\t, PROPERTY_TYPE_SALE\n\t, PROPERTY_TYPE_LEO )\n    def __init__(self, category_id=None, property_id=None, property_type=PROPERTY_TYPE_NORMAL):\n        super(CategoryPropertyAssociationModel, self).__init__()\n        self.category_id = Field(name='category_id', type=int, value=category_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_type = Field(name='property_type', type=FieldTypeEnum, value=property_type, default=self.PROPERTY_TYPE_NORMAL)", "class InterfaceLogModel(ModelIface):\n    TABLE_NAME = 'interface_log'\n    # DB_NAME = 'warehouse'\n    TARGET_TYPE_UNKNOWN = 'unknown'\n    TARGET_TYPE_LEO = 'leo'\n    TARGET_TYPE_SPU = 'spu'\n    TARGET_TYPE_GOODS = 'goods'\n    TARGET_TYPE_SKU = 'sku'\n    TARGET_TYPE_IMAGE = 'image'\n    TARGET_TYPE_DESCRIPTION = 'description'\n    TARGET_TYPE_TAG = 'tag'\n    CHANNEL_LMS = 'lms'\n    CHANNEL_SCRIPT = 'script'\n    CHANNEL_MANUAL = 'manual'\n    ALL_TARGET_TYPE_CANDIDATES = (\n\tTARGET_TYPE_UNKNOWN\n\t, TARGET_TYPE_LEO\n\t, TARGET_TYPE_SPU\n\t, TARGET_TYPE_GOODS\n\t, TARGET_TYPE_SKU\n\t, TARGET_TYPE_IMAGE\n\t, TARGET_TYPE_DESCRIPTION\n\t, TARGET_TYPE_TAG )\n    ALL_CHANNEL_CANDIDATES = (\n\tCHANNEL_LMS\n\t, CHANNEL_SCRIPT\n\t, CHANNEL_MANUAL )\n    def __init__(self, id=None, target_type=TARGET_TYPE_UNKNOWN, target_id=None, operator=None, channel=None, channel_info=None, interface=None, interface_params=None, interface_result=None, called_time=None, time_cost=None, system_version=None, git_sha1=None, description=None):\n        super(InterfaceLogModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.target_type = Field(name='target_type', type=FieldTypeEnum, value=target_type, default=self.TARGET_TYPE_UNKNOWN)\n        self.target_id = Field(name='target_id', type=int, value=target_id, default=None)\n        self.operator = Field(name='operator', type=str, value=operator, default=None)\n        self.channel = Field(name='channel', type=FieldTypeEnum, value=channel, default=None)\n        self.channel_info = Field(name='channel_info', type=str, value=channel_info, default=None)\n        self.interface = Field(name='interface', type=str, value=interface, default=None)\n        self.interface_params = Field(name='interface_params', type=str, value=interface_params, default=None)\n        self.interface_result = Field(name='interface_result', type=str, value=interface_result, default=None)\n        self.called_time = Field(name='called_time', type=str, value=called_time, default='None')\n        self.time_cost = Field(name='time_cost', type=str, value=time_cost, default='None')\n        self.system_version = Field(name='system_version', type=str, value=system_version, default=None)\n        self.git_sha1 = Field(name='git_sha1', type=str, value=git_sha1, default=None)\n        self.description = Field(name='description', type=str, value=description, default=None)", "class LeoModel(ModelIface):\n    TABLE_NAME = 'leo'\n    # DB_NAME = 'warehouse'\n    TARGET_TYPE_UNKNOWN = 'unknown'\n    TARGET_TYPE_SPU = 'spu'\n    TARGET_TYPE_GOODS = 'goods'\n    TARGET_TYPE_SKU = 'sku'\n    TARGET_TYPE_BAREBONE = 'barebone'\n    TARGET_TYPE_REFERS = 'refers'\n    STATUS_TOBEIMPORTED = 'ToBeImported'\n    STATUS_IMPORTED = 'Imported'\n    STATUS_OFFLINE = 'Offline'\n    STATUS_AUDITED = 'Audited'\n    STATUS_TOBEUPDATE = 'ToBeUpdate'\n    STATUS_TOBEAUDITED = 'ToBeAudited'\n    STATUS_VIRTUALLYREMOVED = 'VirtuallyRemoved'\n    ALL_TARGET_TYPE_CANDIDATES = (\n\tTARGET_TYPE_UNKNOWN\n\t, TARGET_TYPE_SPU\n\t, TARGET_TYPE_GOODS\n\t, TARGET_TYPE_SKU\n\t, TARGET_TYPE_BAREBONE\n\t, TARGET_TYPE_REFERS )\n    ALL_STATUS_CANDIDATES = (\n\tSTATUS_TOBEIMPORTED\n\t, STATUS_IMPORTED\n\t, STATUS_OFFLINE\n\t, STATUS_AUDITED\n\t, STATUS_TOBEUPDATE\n\t, STATUS_TOBEAUDITED\n\t, STATUS_VIRTUALLYREMOVED )\n    def __init__(self, id=None, category_id=None, target_type=TARGET_TYPE_UNKNOWN, target_id=None, mirror_id=None, source_id=None, name=None, cn_name=None, participate_status=None, status=STATUS_TOBEAUDITED, create_time=None, update_time=None):\n        super(LeoModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.category_id = Field(name='category_id', type=int, value=category_id, default=None)\n        self.target_type = Field(name='target_type', type=FieldTypeEnum, value=target_type, default=self.TARGET_TYPE_UNKNOWN)\n        self.target_id = Field(name='target_id', type=int, value=target_id, default=None)\n        self.mirror_id = Field(name='mirror_id', type=int, value=mirror_id, default=None)\n        self.source_id = Field(name='source_id', type=int, value=source_id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)\n        self.participate_status = Field(name='participate_status', type=int, value=participate_status, default=None)\n        self.status = Field(name='status', type=FieldTypeEnum, value=status, default=self.STATUS_TOBEAUDITED)\n        self.create_time = Field(name='create_time', type=str, value=create_time, default='None')\n        self.update_time = Field(name='update_time', type=str, value=update_time, default='None')", "class SkuPropertyModel(ModelIface):\n    TABLE_NAME = 'sku_property'\n    # DB_NAME = 'warehouse'\n    def __init__(self, sku_id=None, property_id=None, property_value=None):\n        super(SkuPropertyModel, self).__init__()\n        self.sku_id = Field(name='sku_id', type=int, value=sku_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_value = Field(name='property_value', type=str, value=property_value, default=None)", "class DescriptionModel(ModelIface):\n    TABLE_NAME = 'description'\n    # DB_NAME = 'warehouse'\n    TARGET_TYPE_UNKNOWN = 'unknown'\n    TARGET_TYPE_SPU = 'spu'\n    TARGET_TYPE_GOOD = 'good'\n    TARGET_TYPE_SKU = 'sku'\n    TARGET_TYPE_LEO = 'leo'\n    ALL_TARGET_TYPE_CANDIDATES = (\n\tTARGET_TYPE_UNKNOWN\n\t, TARGET_TYPE_SPU\n\t, TARGET_TYPE_GOOD\n\t, TARGET_TYPE_SKU\n\t, TARGET_TYPE_LEO )\n    def __init__(self, id=None, target_type=TARGET_TYPE_UNKNOWN, target_id=None, description=None):\n        super(DescriptionModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.target_type = Field(name='target_type', type=FieldTypeEnum, value=target_type, default=self.TARGET_TYPE_UNKNOWN)\n        self.target_id = Field(name='target_id', type=int, value=target_id, default=None)\n        self.description = Field(name='description', type=str, value=description, default=None)", "class StocksLogModel(ModelIface):\n    TABLE_NAME = 'stocks_log'\n    # DB_NAME = 'warehouse'\n    def __init__(self, sku_id=None, order_serial_id=None, user_id=None, ops_rc=None, ops_code=None, stocks_new=None, stocks_old=None, stocks_req=None, stocks_total=None, ops_time=None, ops_why=None):\n        super(StocksLogModel, self).__init__()\n        self.sku_id = Field(name='sku_id', type=int, value=sku_id, default=None)\n        self.order_serial_id = Field(name='order_serial_id', type=str, value=order_serial_id, default=None)\n        self.user_id = Field(name='user_id', type=int, value=user_id, default=None)\n        self.ops_rc = Field(name='ops_rc', type=int, value=ops_rc, default=None)\n        self.ops_code = Field(name='ops_code', type=int, value=ops_code, default=None)\n        self.stocks_new = Field(name='stocks_new', type=int, value=stocks_new, default=None)\n        self.stocks_old = Field(name='stocks_old', type=int, value=stocks_old, default=None)\n        self.stocks_req = Field(name='stocks_req', type=int, value=stocks_req, default=None)\n        self.stocks_total = Field(name='stocks_total', type=int, value=stocks_total, default=None)\n        self.ops_time = Field(name='ops_time', type=str, value=ops_time, default='None')\n        self.ops_why = Field(name='ops_why', type=str, value=ops_why, default=None)", "class PropertyValueModel(ModelIface):\n    TABLE_NAME = 'property_value'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, property_id=None, value=None):\n        super(PropertyValueModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.value = Field(name='value', type=str, value=value, default=None)", "class SpuPropertyModel(ModelIface):\n    TABLE_NAME = 'spu_property'\n    # DB_NAME = 'warehouse'\n    def __init__(self, spu_id=None, property_id=None, property_value=None):\n        super(SpuPropertyModel, self).__init__()\n        self.spu_id = Field(name='spu_id', type=int, value=spu_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_value = Field(name='property_value', type=str, value=property_value, default=None)", "class PersonModel(ModelIface):\n    TABLE_NAME = 'person'\n    # DB_NAME = 'go'\n    SEX_FEMALE = 'FEMALE'\n    SEX_MALE = 'MALE'\n    SEX_UNKNOWN = 'UNKNOWN'\n    ALL_SEX_CANDIDATES = (\n\tSEX_FEMALE\n\t, SEX_MALE\n\t, SEX_UNKNOWN )\n    def __init__(self, id=None, name=None, sex=SEX_UNKNOWN, age=None):\n        super(PersonModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.sex = Field(name='sex', type=FieldTypeEnum, value=sex, default=self.SEX_UNKNOWN)\n        self.age = Field(name='age', type=int, value=age, default=None)", "class StocksModel(ModelIface):\n    TABLE_NAME = 'stocks'\n    # DB_NAME = 'warehouse'\n    def __init__(self, sku_id=None, stocks=None, origin_stocks=None):\n        super(StocksModel, self).__init__()\n        self.sku_id = Field(name='sku_id', type=int, value=sku_id, default=None)\n        self.stocks = Field(name='stocks', type=int, value=stocks, default=None)\n        self.origin_stocks = Field(name='origin_stocks', type=int, value=origin_stocks, default=None)", "class ResourceReferenceModel(ModelIface):\n    TABLE_NAME = 'resource_reference'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, sku_pkg_id=None, sku_refer_id=None):\n        super(ResourceReferenceModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.sku_pkg_id = Field(name='sku_pkg_id', type=int, value=sku_pkg_id, default=None)\n        self.sku_refer_id = Field(name='sku_refer_id', type=int, value=sku_refer_id, default=None)", "class OperatorModel(ModelIface):\n    TABLE_NAME = 'operator'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, name=None, cn_name=None, mail=None, phone=None):\n        super(OperatorModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)\n        self.mail = Field(name='mail', type=str, value=mail, default=None)\n        self.phone = Field(name='phone', type=str, value=phone, default=None)", "class ResourceReferencePropertyModel(ModelIface):\n    TABLE_NAME = 'resource_reference_property'\n    # DB_NAME = 'warehouse'\n    def __init__(self, resource_reference_id=None, property_id=None, property_value=None):\n        super(ResourceReferencePropertyModel, self).__init__()\n        self.resource_reference_id = Field(name='resource_reference_id', type=int, value=resource_reference_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_value = Field(name='property_value', type=str, value=property_value, default=None)", "class LeoTagAssociationModel(ModelIface):\n    TABLE_NAME = 'leo_tag_association'\n    # DB_NAME = 'warehouse'\n    def __init__(self, leo_id=None, tag_id=None, priority=None, create_time=None, update_time=None):\n        super(LeoTagAssociationModel, self).__init__()\n        self.leo_id = Field(name='leo_id', type=int, value=leo_id, default=None)\n        self.tag_id = Field(name='tag_id', type=int, value=tag_id, default=None)\n        self.priority = Field(name='priority', type=int, value=priority, default=None)\n        self.create_time = Field(name='create_time', type=str, value=create_time, default='None')\n        self.update_time = Field(name='update_time', type=str, value=update_time, default='None')", "class TagModel(ModelIface):\n    TABLE_NAME = 'tag'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, name=None, description=None):\n        super(TagModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.description = Field(name='description', type=str, value=description, default=None)", "class SkuModel(ModelIface):\n    TABLE_NAME = 'sku'\n    # DB_NAME = 'warehouse'\n    SOURCE_LMS = 'LMS'\n    SOURCE_BA = 'BA'\n    SOURCE_IMPORT = 'IMPORT'\n    TYPE_NORMAL = 'NORMAL'\n    TYPE_SPECIAL = 'SPECIAL'\n    SELL_STATUS_BEFORE_SALE = 'BEFORE_SALE'\n    SELL_STATUS_ON_SALE = 'ON_SALE'\n    SELL_STATUS_STOP_SALE = 'STOP_SALE'\n    SELL_STATUS_SOLD_OUT = 'SOLD_OUT'\n    SELL_STATUS_OFFLINE = 'OFFLINE'\n    OFFLINE_RULE_ON_SOLD_OUT = 'ON_SOLD_OUT'\n    OFFLINE_RULE_ON_STOP_SALE = 'ON_STOP_SALE'\n    VISIBLE_RULE_YES_ALWAYS = 'YES_ALWAYS'\n    VISIBLE_RULE_NO_ALWAYS = 'NO_ALWAYS'\n    VISIBLE_RULE_YES_ON_OFFLINE = 'YES_ON_OFFLINE'\n    VISIBLE_RULE_NO_ON_OFFLINE = 'NO_ON_OFFLINE'\n    ALL_SOURCE_CANDIDATES = (\n\tSOURCE_LMS\n\t, SOURCE_BA\n\t, SOURCE_IMPORT )\n    ALL_TYPE_CANDIDATES = (\n\tTYPE_NORMAL\n\t, TYPE_SPECIAL )\n    ALL_SELL_STATUS_CANDIDATES = (\n\tSELL_STATUS_BEFORE_SALE\n\t, SELL_STATUS_ON_SALE\n\t, SELL_STATUS_STOP_SALE\n\t, SELL_STATUS_SOLD_OUT\n\t, SELL_STATUS_OFFLINE )\n    ALL_OFFLINE_RULE_CANDIDATES = (\n\tOFFLINE_RULE_ON_SOLD_OUT\n\t, OFFLINE_RULE_ON_STOP_SALE )\n    ALL_VISIBLE_RULE_CANDIDATES = (\n\tVISIBLE_RULE_YES_ALWAYS\n\t, VISIBLE_RULE_NO_ALWAYS\n\t, VISIBLE_RULE_YES_ON_OFFLINE\n\t, VISIBLE_RULE_NO_ON_OFFLINE )\n    def __init__(self, id=None, goods_id=None, base_id=None, mirror_id=None, source=SOURCE_LMS, name=None, cn_name=None, type=TYPE_SPECIAL, title=None, long_name=None, duration=None, is_pkg=None, sell_status=SELL_STATUS_BEFORE_SALE, auto_update_ss=None, offline_rule=OFFLINE_RULE_ON_STOP_SALE, visible_rule=VISIBLE_RULE_YES_ALWAYS, create_time=None, update_time=None, remove_time=None):\n        super(SkuModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.goods_id = Field(name='goods_id', type=int, value=goods_id, default=None)\n        self.base_id = Field(name='base_id', type=int, value=base_id, default=None)\n        self.mirror_id = Field(name='mirror_id', type=int, value=mirror_id, default=None)\n        self.source = Field(name='source', type=FieldTypeEnum, value=source, default=self.SOURCE_LMS)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)\n        self.type = Field(name='type', type=FieldTypeEnum, value=type, default=self.TYPE_SPECIAL)\n        self.title = Field(name='title', type=str, value=title, default=None)\n        self.long_name = Field(name='long_name', type=str, value=long_name, default=None)\n        self.duration = Field(name='duration', type=int, value=duration, default=None)\n        self.is_pkg = Field(name='is_pkg', type=int, value=is_pkg, default=None)\n        self.sell_status = Field(name='sell_status', type=FieldTypeEnum, value=sell_status, default=self.SELL_STATUS_BEFORE_SALE)\n        self.auto_update_ss = Field(name='auto_update_ss', type=int, value=auto_update_ss, default=None)\n        self.offline_rule = Field(name='offline_rule', type=FieldTypeEnum, value=offline_rule, default=self.OFFLINE_RULE_ON_STOP_SALE)\n        self.visible_rule = Field(name='visible_rule', type=FieldTypeEnum, value=visible_rule, default=self.VISIBLE_RULE_YES_ALWAYS)\n        self.create_time = Field(name='create_time', type=str, value=create_time, default='None')\n        self.update_time = Field(name='update_time', type=str, value=update_time, default='None')\n        self.remove_time = Field(name='remove_time', type=str, value=remove_time, default='None')", "class LeoReferencesModel(ModelIface):\n    TABLE_NAME = 'leo_references'\n    # DB_NAME = 'warehouse'\n    FLAG_BASE = 'base'\n    FLAG_PRIME = 'prime'\n    FLAG_NULL = 'null'\n    ALL_FLAG_CANDIDATES = (\n\tFLAG_BASE\n\t, FLAG_PRIME\n\t, FLAG_NULL )\n    def __init__(self, leo_id=None, refer_id=None, attached=None, flag=FLAG_NULL):\n        super(LeoReferencesModel, self).__init__()\n        self.leo_id = Field(name='leo_id', type=int, value=leo_id, default=None)\n        self.refer_id = Field(name='refer_id', type=int, value=refer_id, default=None)\n        self.attached = Field(name='attached', type=int, value=attached, default=None)\n        self.flag = Field(name='flag', type=FieldTypeEnum, value=flag, default=self.FLAG_NULL)", "class GoodsPropertyModel(ModelIface):\n    TABLE_NAME = 'goods_property'\n    # DB_NAME = 'warehouse'\n    def __init__(self, goods_id=None, property_id=None, property_value=None):\n        super(GoodsPropertyModel, self).__init__()\n        self.goods_id = Field(name='goods_id', type=int, value=goods_id, default=None)\n        self.property_id = Field(name='property_id', type=int, value=property_id, default=None)\n        self.property_value = Field(name='property_value', type=str, value=property_value, default=None)", "class TimePriceModel(ModelIface):\n    TABLE_NAME = 'time_price'\n    # DB_NAME = 'warehouse'\n    def __init__(self, sku_id=None, book_time=None, advice_price=None, biz_price=None):\n        super(TimePriceModel, self).__init__()\n        self.sku_id = Field(name='sku_id', type=int, value=sku_id, default=None)\n        self.book_time = Field(name='book_time', type=str, value=book_time, default='None')\n        self.advice_price = Field(name='advice_price', type=str, value=advice_price, default='None')\n        self.biz_price = Field(name='biz_price', type=str, value=biz_price, default='None')", "class GoodsModel(ModelIface):\n    TABLE_NAME = 'goods'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, spu_id=None, biz_id=None, name=None, cn_name=None):\n        super(GoodsModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.spu_id = Field(name='spu_id', type=int, value=spu_id, default=None)\n        self.biz_id = Field(name='biz_id', type=int, value=biz_id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)", "class ImageModel(ModelIface):\n    TABLE_NAME = 'image'\n    # DB_NAME = 'warehouse'\n    TARGET_TYPE_CATEGORY = 'category'\n    TARGET_TYPE_SPU = 'spu'\n    TARGET_TYPE_GOODS = 'goods'\n    TARGET_TYPE_SKU = 'sku'\n    TARGET_TYPE_LEO = 'leo'\n    TARGET_TYPE_COVER = 'cover'\n    ALL_TARGET_TYPE_CANDIDATES = (\n\tTARGET_TYPE_CATEGORY\n\t, TARGET_TYPE_SPU\n\t, TARGET_TYPE_GOODS\n\t, TARGET_TYPE_SKU\n\t, TARGET_TYPE_LEO\n\t, TARGET_TYPE_COVER )\n    def __init__(self, id=None, target_type=TARGET_TYPE_CATEGORY, target_id=None, origin_url=None, url=None, url_md5=None, name=None, source=None, prime=None):\n        super(ImageModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.target_type = Field(name='target_type', type=FieldTypeEnum, value=target_type, default=self.TARGET_TYPE_CATEGORY)\n        self.target_id = Field(name='target_id', type=int, value=target_id, default=None)\n        self.origin_url = Field(name='origin_url', type=str, value=origin_url, default=None)\n        self.url = Field(name='url', type=str, value=url, default=None)\n        self.url_md5 = Field(name='url_md5', type=str, value=url_md5, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.source = Field(name='source', type=int, value=source, default=None)\n        self.prime = Field(name='prime', type=int, value=prime, default=None)", "class SpuModel(ModelIface):\n    TABLE_NAME = 'spu'\n    # DB_NAME = 'warehouse'\n    def __init__(self, id=None, category_id=None, name=None, cn_name=None, address=None):\n        super(SpuModel, self).__init__()\n        self.id = Field(name='id', type=int, value=id, default=None)\n        self.category_id = Field(name='category_id', type=int, value=category_id, default=None)\n        self.name = Field(name='name', type=str, value=name, default=None)\n        self.cn_name = Field(name='cn_name', type=str, value=cn_name, default=None)\n        self.address = Field(name='address', type=str, value=address, default=None)"]
